# -*- coding: utf-8 -*-
import telebot

import morse
import a1z26 as az
import binary_code as bi_c
import vigener_cipher as vc
from caesar_cipher import cipher_cipher_using_lookup


bot = telebot.TeleBot('TOKEN')
C_KEY = 1
VC_KEY = [52]
IN_TEXT = ''
SHIFT_DIRECTION = 'right'
CIPHER_KEY = 0
LANGUAGE_CIPHER = 'ru'


@bot.message_handler(commands=["start"])
def start(message):
    check_unic_user(message.from_user.id)
    save_today_user(message.from_user.id)
    bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∏ —Ä–∞—Å—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!\n"
                                           "–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —à–∏—Ñ—Ä –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /choose_cipher")


def check_unic_user(user_id):
    unic_file = open('unic_users.csv', 'r+', encoding='utf8')
    new = 0
    for line in unic_file.readlines():
        if str(user_id)[:9] == line[:9]:
            new += 1
    if new == 0:
        unic_file.write('\n' + str(user_id) + '\n')



def save_today_user(user_id):
    today_us = open('today_users.csv', 'w', encoding='utf8')
    today_us.write('\n' + str(user_id))

@bot.message_handler(commands=["help"])
def help(message):
    bot.send_message(message.from_user.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —à–∏—Ñ—Ä —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ "choose_cipher" –≤ '
                                           '–º–µ–Ω—é –≤–Ω–∏–∑—É —Å–ª–µ–≤–∞(–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω –®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è).\n'
                                           '–í –∫–∞–∂–¥–æ–º —à–∏—Ñ—Ä–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–∂–µ –∑–∞–¥–∞–Ω—ã –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Ö '
                                           '–ø–æ–º–µ–Ω—è—Ç—å –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å–ø–ª—ã–≤–∞—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.\n'
                                           '–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–ª–∏ –∏–ª–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–ª–∏ –≤–∞—à —Ç–µ–∫—Å—Ç, –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ '
                                           '–¥–µ–π—Å—Ç–≤–∏—è –≤–∞–º —Å–Ω–æ–≤–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω–æ–µ –≤–∞–º –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–π '
                                           '–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.\n'
                                           '–í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–æ–Ω–æ–≤–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–∏—Å–∞—Ç—å –Ω–∞ –ø–æ—á—Ç—É oas19@tpu.tu –≤ —Ç–µ–º–µ —É–∫–∞–∑–∞—Ç—å'
                                           ' "–¢–µ–ª–µ–≥—Ä–∞–º - –±–æ—Ç"')


@bot.message_handler(commands=["choose_cipher"])
def choose_cipher(message):
    keyboard = telebot.types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    key_caesar = telebot.types.InlineKeyboardButton(text='–®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è', callback_data='caesar')  # –∫–Ω–æ–ø–∫–∞ ¬´–î–∞¬ª
    keyboard.add(key_caesar)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    key_vigener = telebot.types.InlineKeyboardButton(text='–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –í–∏–∂–µ–Ω–µ—Ä—É', callback_data='vigener')
    keyboard.add(key_vigener)
    key_binary = telebot.types.InlineKeyboardButton(text='–î–≤–æ–∏—á–Ω—ã–π –∫–æ–¥', callback_data='binary')
    keyboard.add(key_binary)
    key_a1z26 = telebot.types.InlineKeyboardButton(text='–®–∏—Ñ—Ä A1Z26', callback_data='a1z26')
    keyboard.add(key_a1z26)
    key_morse = telebot.types.InlineKeyboardButton(text='–ö–æ–¥ –ú–æ—Ä–∑–µ', callback_data='morse')
    keyboard.add(key_morse)
    bot.send_message(message.from_user.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –®–∏—Ñ—Ä", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    global SHIFT_DIRECTION, CIPHER_KEY, LANGUAGE_CIPHER
    if call.data == "caesar":
        CIPHER_KEY = 0

        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.row('–û –®–∏—Ñ—Ä–µ –¶–µ–∑–∞—Ä—è')
        keyboard.row('–ó–∞–¥–∞—Ç—å –∫–ª—é—á —Å–¥–≤–∏–≥–∞', '–í—ã–±—Ä–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞')
        keyboard.row('–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç', '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç')
        bot.send_message(call.message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —à–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è!\n - –ö–ª—é—á —Å–¥–∏–≤–≥–∞ = ' + str(C_KEY) + '\n'
                                                                                                           ' - –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞: –≤–ø—Ä–∞–≤–æ\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!üëá',
                         reply_markup=keyboard)
    elif call.data == "vigener":
        CIPHER_KEY = 1

        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.row('–û –®–∏—Ñ—Ä–µ –í–∏–∂–µ–Ω–µ—Ä–∞', '–ü—Ä–∏–º–µ—Ä —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –í–∏–∂–µ–Ω–µ—Ä–∞')
        keyboard.row('–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç', '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç')
        keyboard.row('–ó–∞–¥–∞—Ç—å –∫–ª—é—á')
        bot.send_message(call.message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —à–∏—Ñ—Ä –í–∏–∂–µ–Ω–µ—Ä–∞!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!üëá',
                         reply_markup=keyboard)

    elif call.data == "morse":
        CIPHER_KEY = 2
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.row('–û –∫–æ–¥–µ –ú–æ—Ä–∑–µ')
        keyboard.row('–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫')
        keyboard.row('–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç', '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç')
        bot.send_message(call.message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–æ–¥ –ú–æ—Ä–∑–µ!\n - –Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!üëá',
                         reply_markup=keyboard)

    elif call.data == "binary":
        CIPHER_KEY = 3
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.row('–û –î–≤–æ–∏—á–Ω–æ–º –ö–æ–¥–µ')
        keyboard.row('–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç', '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç')
        bot.send_message(call.message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤ –î–æ–≤–∏—á–Ω—ã–π –∫–æ–¥!'
                                               '\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!üëá', reply_markup=keyboard)


    elif call.data == "a1z26":
        CIPHER_KEY = 4
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.row('–û —à–∏—Ñ—Ä–µ A1Z26')
        keyboard.row('–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç', '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç')
        keyboard.row('–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫')
        bot.send_message(call.message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –®–∏—Ñ—Ä A1Z26!\n - –Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π'
                                               '\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!üëá', reply_markup=keyboard)

    elif call.data == "right":
        SHIFT_DIRECTION = 'right'
        bot.send_message(call.message.chat.id, '–í—ã–±—Ä–∞–Ω —Å–¥–≤–∏–≥ –≤–ø—Ä–∞–≤–æ')

    elif call.data == "left":
        SHIFT_DIRECTION = 'left'
        bot.send_message(call.message.chat.id, '–í—ã–±—Ä–∞–Ω —Å–¥–≤–∏–≥ –≤–ª–µ–≤–æ')

    elif call.data == "ru":
        LANGUAGE_CIPHER = call.data
        bot.send_message(call.message.chat.id, '–í—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫: –†—É—Å—Å–∫–∏–π')

    elif call.data == "en":
        LANGUAGE_CIPHER = call.data
        bot.send_message(call.message.chat.id, '–í—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫: –ê–Ω–≥–ª–∏–π—Å–∫–∏–π')

    bot.answer_callback_query(call.id)


@bot.message_handler(content_types=["text"])
def text_handler(message):
    if message.text == "–ó–∞–¥–∞—Ç—å –∫–ª—é—á —Å–¥–≤–∏–≥–∞":
        bot.send_message(message.chat.id, '–í–ø–∏—à–∏—Ç–µ –∫–ª—é—á:')
        bot.register_next_step_handler(message, caesar_key)

    elif message.text == "–ó–∞–¥–∞—Ç—å –∫–ª—é—á":
        bot.send_message(message.chat.id, '–í–ø–∏—à–∏—Ç–µ –∫–ª—é—á:')
        bot.register_next_step_handler(message, vigener_key)

    elif message.text == "–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç":
        if CIPHER_KEY == 0:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, caesar_crypt)
        elif CIPHER_KEY == 1:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, vigener_crypt)
        elif CIPHER_KEY == 2:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, morse_crypt)
        elif CIPHER_KEY == 3:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, binary_crypt)
        elif CIPHER_KEY == 4:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, a1z26_crypt)

    elif message.text == "–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç":
        if CIPHER_KEY == 0:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, caesar_decrypt)
        elif CIPHER_KEY == 1:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, vigener_decrypt)
        elif CIPHER_KEY == 2:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, morse_decrypt)
        elif CIPHER_KEY == 3:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, binary_decrypt)
        elif CIPHER_KEY == 4:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, a1z26_decrypt)

    elif message.text == "–í—ã–±—Ä–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞":
        keyboard = telebot.types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        shift_right = telebot.types.InlineKeyboardButton(text='–°–¥–≤–∏–≥ –≤–ø—Ä–∞–≤–æ', callback_data='right')
        keyboard.add(shift_right)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        shift_left = telebot.types.InlineKeyboardButton(text='–°–¥–≤–∏–≥ –≤–ª–µ–≤–æ', callback_data='left')
        keyboard.add(shift_left)
        bot.send_message(message.from_user.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ—Ä–æ–Ω—É —Å–¥–≤–∏–≥–∞", reply_markup=keyboard)

    elif message.text == "–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫":
        keyboard = telebot.types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        ru_lang = telebot.types.InlineKeyboardButton(text='–†—É—Å—Å–∫–∏–π', callback_data='ru')
        keyboard.add(ru_lang)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        en_lang = telebot.types.InlineKeyboardButton(text='–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', callback_data='en')
        keyboard.add(en_lang)
        bot.send_message(message.from_user.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ—Ä–æ–Ω—É —Å–¥–≤–∏–≥–∞", reply_markup=keyboard)

    elif message.text == "–û –®–∏—Ñ—Ä–µ –¶–µ–∑–∞—Ä—è":
        bot.send_message(message.from_user.id, '–®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è ‚Äî —ç—Ç–æ –≤–∏–¥ —à–∏—Ñ—Ä–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ '
                                               '–æ—Ç–∫—Ä—ã—Ç–æ–º —Ç–µ–∫—Å—Ç–µ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è —Å–∏–º–≤–æ–ª–æ–º, –Ω–∞—Ö–æ–¥—è—â–∏–º—Å—è –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–æ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º '
                                               '—á–∏—Å–ª–µ –ø–æ–∑–∏—Ü–∏–π –ª–µ–≤–µ–µ –∏–ª–∏ –ø—Ä–∞–≤–µ–µ –Ω–µ–≥–æ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ —à–∏—Ñ—Ä–µ —Å–æ '
                                               '—Å–¥–≤–∏–≥–æ–º 3 –ê –±—ã–ª–∞ –±—ã –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ –ì, –ë —Å—Ç–∞–Ω–µ—Ç –î, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.'
                                               '–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–ª—é—á —Å–¥–≤–∏–≥–∞ = 1, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞ - –≤–ø—Ä–∞–≤–æ')

        img = open('pictures/caesar_info.jpeg', 'rb')
        bot.send_photo(message.chat.id, img)

    elif message.text == "–û –®–∏—Ñ—Ä–µ –í–∏–∂–µ–Ω–µ—Ä–∞":
        bot.send_message(message.from_user.id, '–®–∏—Ñ—Ä –í–∏–∂–µ–Ω–µ—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —à–∏—Ñ—Ä–æ–≤ –¶–µ–∑–∞—Ä—è —Å '
                                               '—Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Å–¥–≤–∏–≥–∞. –î–ª—è –∑–∞—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–Ω–∏—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è '
                                               '—Ç–∞–±–ª–∏—Ü–∞ –∞–ª—Ñ–∞–≤–∏—Ç–æ–≤, –Ω–∞–∑—ã–≤–∞–µ–º–∞—è tabula recta –∏–ª–∏ –∫–≤–∞–¥—Ä–∞—Ç (—Ç–∞–±–ª–∏—Ü–∞) '
                                               '–í–∏–∂–µ–Ω–µ—Ä–∞. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ –∫ –ª–∞—Ç–∏–Ω—Å–∫–æ–º—É –∞–ª—Ñ–∞–≤–∏—Ç—É —Ç–∞–±–ª–∏—Ü–∞ –í–∏–∂–µ–Ω–µ—Ä–∞ '
                                               '—Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–∑ —Å—Ç—Ä–æ–∫ –ø–æ 26 —Å–∏–º–≤–æ–ª–æ–≤, –ø—Ä–∏—á—ë–º –∫–∞–∂–¥–∞—è —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ '
                                               '—Å–¥–≤–∏–≥–∞–µ—Ç—Å—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–∑–∏—Ü–∏–π. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è 26 '
                                               '—Ä–∞–∑–ª–∏—á–Ω—ã—Ö —à–∏—Ñ—Ä–æ–≤ –¶–µ–∑–∞—Ä—è. –ù–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è '
                                               '—Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞–ª—Ñ–∞–≤–∏—Ç—ã, –≤—ã–±–∏—Ä–∞–µ–º—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∏–º–≤–æ–ª–∞ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞.'
                         )

        img = open('pictures/vigenere-cipher-0.png', 'rb')
        bot.send_photo(message.chat.id, img)

    elif message.text == "–ü—Ä–∏–º–µ—Ä —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –í–∏–∂–µ–Ω–µ—Ä–∞":

        img = open('pictures/example_vigener.png', 'rb')
        bot.send_photo(message.chat.id, img)

    elif message.text == "–û –∫–æ–¥–µ –ú–æ—Ä–∑–µ":
        bot.send_message(message.from_user.id, '–ê–∑–±—É–∫–∞ –ú–æ—Ä–∑–µ ‚Äî –∫–æ–¥ –ú–æ—Ä–∑–µ, ¬´–ú–æ—Ä–∑—è–Ω–∫–∞¬ª ‚Äî —Å–ø–æ—Å–æ–± –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –±—É–∫–≤ '
                                               '–∞–ª—Ñ–∞–≤–∏—Ç–∞, —Ü–∏—Ñ—Ä, –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –¥—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –¥–ª–∏–Ω–Ω—ã—Ö '
                                               '–∏ –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤, —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã—Ö ¬´—Ç–∏—Ä–µ¬ª –∏ ¬´—Ç–æ—á–µ–∫¬ª (–∞ —Ç–∞–∫–∂–µ –ø–∞—É–∑, '
                                               '—Ä–∞–∑–¥–µ–ª—è—é—â–∏—Ö –±—É–∫–≤—ã). \n–ó–∞ –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–π '
                                               '—Ç–æ—á–∫–∏. –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∏—Ä–µ —Ä–∞–≤–Ω–∞ —Ç—Ä—ë–º —Ç–æ—á–∫–∞–º. –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–Ω–∞–∫–∞–º–∏ –≤ '
                                               '–±—É–∫–≤–µ ‚Äî –æ–¥–Ω–∞ —Ç–æ—á–∫–∞, –º–µ–∂–¥—É –±—É–∫–≤–∞–º–∏ –≤ —Å–ª–æ–≤–µ ‚Äî 3 —Ç–æ—á–∫–∏, –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏ '
                                               '‚Äî 7 —Ç–æ—á–µ–∫.'
                         )
        img = open('pictures/morse.jpg', 'rb')
        bot.send_photo(message.chat.id, img)

    elif message.text == "–û –î–≤–æ–∏—á–Ω–æ–º –ö–æ–¥–µ":
        bot.send_message(message.from_user.id, '–¢–µ–∫—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–ø–æ–ª–Ω–µ –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ –¥–≤–æ–∏—á–Ω–æ–º –∫–æ–¥–µ. '
                                               '–í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –ø–æ —Ç–∞–±–ª–∏—Ü–µ —Å–∏–º–≤–æ–ª–æ–≤ (—á–∞—â–µ –≤—Å–µ–≥–æ ASCII) –∫–∞–∂–¥–æ–µ –ø—Ä–æ—Å—Ç–æ–µ '
                                               '—á–∏—Å–ª–æ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Å –±—É–∫–≤–æ–π: 01100001 = 97 = ¬´a¬ª, '
                                               '01100010 = 98 = ¬´b¬ª, etc. –ü—Ä–∏ —ç—Ç–æ–º –≤–∞–∂–Ω–æ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞.')

        img = open('pictures/binary.jpg', 'rb')
        bot.send_photo(message.chat.id, img)

    elif message.text == "–û —à–∏—Ñ—Ä–µ A1Z26":
        bot.send_message(message.from_user.id, '–®–∏—Ñ—Ä A1Z26 - –ø—Ä–æ—Å—Ç–æ–π —à–∏—Ñ—Ä, –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–µ, –≥–¥–µ –∫–∞–∂–¥–∞—è '
                                               '–±—É–∫–≤–∞ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è —Å–≤–æ–∏–º –ø–æ—Ä—è–¥–∫–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ. '
                                               '–ë—É–∫–≤–∞ –Å –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –±—É–∫–≤–∞, –Ø –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 32.\n'
                                               '–ü—Ä–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏ –∏ –∑–Ω–∞–∫–∏ '
                                               '–ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –ø—Ä–æ–ø–∞–¥–∞—é—Ç')


def vigener_key(message):
    global VC_KEY
    key = message.text
    bot.send_message(message.from_user.id, '–í–∞—à –∫–ª—é—á: ' + key)
    VC_KEY = vc.encode_val(key)


def caesar_key(message):
    global C_KEY
    C_KEY = message.text
    if C_KEY.isdigit():
        bot.send_message(message.from_user.id, '–í–∞—à –∫–ª—é—á: ' + str(C_KEY))
    elif int(C_KEY.isdigit()) == float(C_KEY.isdigit()):
        bot.send_message(message.from_user.id, '–ß–∏—Å–ª–æ –¥–æ–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º  –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã')
        bot.register_next_step_handler(message, caesar_key)
    else:
        bot.send_message(message.from_user.id, '–¶–∏—Ñ—Ä–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')
        bot.register_next_step_handler(message, caesar_key)

def a1z26_crypt(message):
    in_text = message.text
    bot.send_message(message.from_user.id, '–í–∞—à —Ç–µ–∫—Å—Ç: ' + in_text)
    ans = az.a1z26_encrypt(in_text, lang=LANGUAGE_CIPHER)
    bot.send_message(message.from_user.id, '–®–∏—Ñ—Ä:')
    bot.send_message(message.from_user.id, ans)


def a1z26_decrypt(message):
    in_text = message.text
    bot.send_message(message.from_user.id, '–í–∞—à —Ç–µ–∫—Å—Ç: ' + in_text)
    ans = az.a1z26_decrypt(in_text, lang=LANGUAGE_CIPHER)
    bot.send_message(message.from_user.id, '–®–∏—Ñ—Ä:')
    bot.send_message(message.from_user.id, ans)


def binary_crypt(message):
    in_text = message.text
    bot.send_message(message.from_user.id, '–í–∞—à —Ç–µ–∫—Å—Ç: ' + in_text)
    ans = bi_c.text_to_bits(in_text)
    bot.send_message(message.from_user.id, '–®–∏—Ñ—Ä:')
    bot.send_message(message.from_user.id, ans)


def binary_decrypt(message):
    in_text = message.text
    bot.send_message(message.from_user.id, '–í–∞—à —à–∏—Ñ—Ä: ' + in_text)
    ans = bi_c.text_from_bits(in_text)
    bot.send_message(message.from_user.id, '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:')
    bot.send_message(message.from_user.id, ans)


def morse_crypt(message):
    in_text = message.text
    bot.send_message(message.from_user.id, '–í–∞—à —Ç–µ–∫—Å—Ç: ' + in_text)
    ans = morse.encrypt(in_text, lang=LANGUAGE_CIPHER)
    bot.send_message(message.from_user.id, '–®–∏—Ñ—Ä:')
    bot.send_message(message.from_user.id, ans)


def morse_decrypt(message):
    in_text = message.text
    bot.send_message(message.from_user.id, '–í–∞—à —à–∏—Ñ—Ä: ' + in_text)
    ans = morse.decrypt(in_text, lang=LANGUAGE_CIPHER)
    bot.send_message(message.from_user.id, '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:')
    bot.send_message(message.from_user.id, ans)


def vigener_crypt(message):
    in_text = message.text
    bot.send_message(message.from_user.id, '–í–∞—à —Ç–µ–∫—Å—Ç: ' + in_text)
    ans_1 = vc.full_encode(value=vc.encode_val(in_text), key=VC_KEY)
    ans = ''.join(vc.decode_val(ans_1))
    bot.send_message(message.from_user.id, '–®–∏—Ñ—Ä: \n' + ans)


def vigener_decrypt(message):
    in_text = message.text
    bot.send_message(message.from_user.id, '–í–∞—à —à–∏—Ñ—Ä: ' + in_text)
    ans_1 = vc.full_decode(value=vc.encode_val(in_text), key=VC_KEY)
    ans = ''.join(vc.decode_val(ans_1))
    bot.send_message(message.from_user.id, '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:')
    bot.send_message(message.from_user.id, ans)


def caesar_crypt(message):
    global SHIFT_DIRECTION
    in_text = message.text
    display_shift_direct = '–≤–ø—Ä–∞–≤–æ' if SHIFT_DIRECTION == 'right' else '–≤–ª–µ–≤–æ'
    bot.send_message(message.from_user.id, '–í–∞—à —Ç–µ–∫—Å—Ç: ' + in_text + '\n–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞: ' + display_shift_direct +
                     '\n–ö–ª—é—á —Å–¥–≤–∏–≥–∞=  ' + str(C_KEY))
    ans = cipher_cipher_using_lookup(text=in_text, key=int(C_KEY), decrypt=False, shift_type=SHIFT_DIRECTION)
    bot.send_message(message.from_user.id, ans)


def caesar_decrypt(message):
    global SHIFT_DIRECTION
    in_text = message.text
    display_shift_direct = '–≤–ø—Ä–∞–≤–æ' if SHIFT_DIRECTION == 'right' else '–≤–ª–µ–≤–æ'
    bot.send_message(message.from_user.id, '–í–∞—à —à–∏—Ñ—Ä: ' + in_text + '\n–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–¥–≤–∏–≥–∞: ' + display_shift_direct +
                     '\n–ö–ª—é—á —Å–¥–≤–∏–≥–∞=  ' + str(C_KEY))
    ans = cipher_cipher_using_lookup(text=in_text, key=int(C_KEY), decrypt=True, shift_type=SHIFT_DIRECTION)
    bot.send_message(message.from_user.id, '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:')
    bot.send_message(message.from_user.id, ans)


bot.polling(none_stop=True, interval=0)
